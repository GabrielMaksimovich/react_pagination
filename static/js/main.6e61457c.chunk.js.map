{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","visiblePages","handlePageChange","page","className","cn","disabled","onClick","href","map","active","items","App","useState","setPerPage","setCurrentPage","startIndex","lastIndex","itemsOnPage","slice","value","onChange","event","Number","target","id","htmlFor","newPageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAef,EAAW,EAAGY,GAE7BI,EAAmB,SAACC,GACpBP,IAAgBO,GAAQA,GAAQ,GAAKA,GAAQL,GAC/CD,EAAaM,IAIjB,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUV,GAAe,IAF7B,SAKE,mBACE,UAAQ,WACRW,QAAS,kBAAML,EAAiBN,EAAc,IAC9CQ,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBZ,GAAqB,OALtC,oBAWDK,EAAaQ,KAAI,SAAAN,GAAI,OACpB,oBACEC,UAAWC,IACT,YACA,CAAEK,OAAQd,IAAgBO,IAH9B,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVI,KAAI,WAAML,GACVI,QAAS,kBAAML,EAAiBC,IAJlC,SAMGA,KAREA,MAaT,oBAAIC,UAAWC,IACb,YACA,CAAEC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVI,KAAK,QACL,gBAAeZ,IAAgBE,GAAc,OAC7CS,QAAS,kBAAML,EAAiBN,EAAc,IALhD,0BCjEJe,EAAQzB,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KAWMC,EAAarB,EAAUC,EAAcD,EACrCsB,EAAYtB,EAAUC,GAAe,GAAKD,EAAUC,EAAc,GAElEsB,EAAcP,EAAMQ,MAAMH,EAAYC,GAE5C,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCoB,EAAa,EAD9C,cACqDC,EADrD,aAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEgB,MAAOzB,EACP0B,SA1BY,SAACC,GACrBR,EAAWS,OAAOD,EAAME,OAAOJ,QAC/BL,EAAe,IAyBP,UAAQ,kBACRU,GAAG,kBACHrB,UAAU,eALZ,UAOE,wBAAQgB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aA1Ca,SAAC8B,GAClBZ,EAAeY,MA4Cb,6BACGT,EAAYT,KAAI,SAAAmB,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6e61457c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const totalPages = Math.ceil(total / perPage);\n  const visiblePages = getNumbers(1, totalPages);\n\n  const handlePageChange = (page: number) => {\n    if (currentPage !== page && page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage <= 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            onClick={() => handlePageChange(currentPage - 1)}\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 && 'true'}\n          >\n            «\n          </a>\n        </li>\n\n        {visiblePages.map(page => (\n          <li\n            className={cn(\n              'page-item',\n              { active: currentPage === page },\n            )}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === totalPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages && 'true'}\n            onClick={() => handlePageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const handlePage = (newPageNumber: number) => {\n    setCurrentPage(newPageNumber);\n  };\n\n  const startIndex = perPage * currentPage - perPage;\n  const lastIndex = perPage * currentPage <= 42 ? perPage * currentPage : 42;\n\n  const itemsOnPage = items.slice(startIndex, lastIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${lastIndex} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            onChange={handlePerPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePage}\n      />\n\n      <ul>\n        {itemsOnPage.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}